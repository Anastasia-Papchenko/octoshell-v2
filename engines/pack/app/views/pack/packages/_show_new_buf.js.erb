function getJSONSyncWithData(url,data,success)
{
  $.ajax({
    dataType: "json",
    data: data,
    url: url,
    success: success,
    async: false
  });
}

function AccessViewer(ids) {
  this.ids = ids;
  this.load = function() {
    accesses = null;
    getJSONSyncWithData('/pack/accesses/load_for_versions',{versions_ids: ids},function(result){
      accesses = result;
    });
    this.accesses = accesses;
  };

  this.render_form_for_version = function(version_id) {
    var form_element= $( `.btn_access[version_id='${version_id}']`).parents('tr').next().find('div.alpaca-form');
    form_element.alpaca({
      "schema": {
        "type": "object",
        "properties":{
          "proj_or_user":{
            "enum": <%=raw @options_for_select.to_json%>,
            "required": true
          }
        }
      },
      "options": {
          "fields":{
            "proj_or_user":{
              "label": "",
              "type": "select",
              "optionLabels": <%=raw @options_for_select_labels.to_json%>,
              "validate": false
            }
          },
          "form": {
                "attributes": {
                    "method": "post",
                    "action": "action"
                },
                "buttons": {
                    "submit": {
                        "title": "preview"
                      }
                    },
                    "click": function() {
                       this.validate(true);
                       this.refreshValidationState(true);
                     }
            }

      },
      "postRender": function(control) {
        apply_select();
        var accesses = viewer.accesses[version_id] || [];
        var sel_value = control.getControlByPath("proj_or_user").getValue();

        control.domEl.find('.alpaca-form-buttons-container').before("<p class='accesses-messages'> </p>");

        var access = null;
        if(sel_value == 'user')
        {
          for(i=0; i< accesses.length; i++)
          {
            if(accesses[i].who_type == 'User')
            {
              access = accesses[i];
              break;
            }
          }
        }
        else {

        }
        //not created yet
        if (access){
          switch(access.status){
            case "requested":
              control.domEl.find(".alpaca-form-button-submit").text('<%=t('.cancel')%>');
              break;
            case "denied":
              console.log(control.domEl.find('.accesses-messages').length);
              control.domEl.find('.accesses-messages').html('<font color="red"> <%= t("mailer_messages.denied") %> </font>')
              break;
          }
        }
        else {
            var itemId = "forever";
            var itemSchema = {
                "type": "radio",
                "enum": ['true','false'],
                "required": true

            };
            var labels= <%=raw [Pack::Access.human_attribute_name("forever"),Pack::Access.human_attribute_name("not_forever")].to_json%>;
            var itemOptions = {
                "optionLabels": labels
            };
            var itemData = "false";
            var insertAfterId = 'it does not work';
            control.addItem(itemId, itemSchema, itemOptions, itemData, insertAfterId);

            var dateItemId = "end_lic";
            itemSchema = {
                "title": '<%=raw Pack::Access.human_attribute_name("end_lic")%>',
                "dependencies": ["forever"]

            };
            var itemOptions = {
              "dependencies":{
                "forever": "false"
              }
            };
            insertAfterId = 'it does not work';

            control.addItem(dateItemId, itemSchema, itemOptions, itemData, insertAfterId);

            control.getControlByPath('end_lic').getControlEl().datepicker({
                                                                    dateFormat: 'mm-dd-yy',
                                                                    minDate: 0
                                                                  });
            //Alpaca не фурычит с динамическими полями
            //Сделать две формы                                                       
        }
      }
    });
  }
};

var viewer = new AccessViewer(<%=@versions.map(&:id)%>);
viewer.load();

$(document ).on('click',".btn_access",function()
{
  var version_id= $(this).attr('version_id');
  var el= $(this).parents('tr').next().find('div.accesses_form_container')
   if (el.attr('hidden'))
   {
      $(this).html("<%=t('disable')%>");
      el.removeProp('hidden');
      viewer.render_form_for_version(version_id);
      // $(".select_ajax_access[vers_id='" + version_id + "']").each(make_form);
   }
   else
   {
      el.attr('hidden','');
      $(this).html('<%=t("want")%>');
   }

});
